//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.CloudSave.Internal.Http;



namespace Unity.Services.CloudSave.Internal.Models
{
    /// <summary>
    /// FileStorageSetupDetails model
    /// </summary>
    [Preserve]
    [DataContract(Name = "FileStorageSetupDetails")]
    internal class FileStorageSetupDetails
    {
        /// <summary>
        /// Creates an instance of FileStorageSetupDetails.
        /// </summary>
        /// <param name="organizationId">organizationId param</param>
        /// <param name="projectName">projectName param</param>
        [Preserve]
        public FileStorageSetupDetails(string organizationId, string projectName)
        {
            OrganizationId = organizationId;
            ProjectName = projectName;
        }

        /// <summary>
        /// Parameter organizationId of FileStorageSetupDetails
        /// </summary>
        [Preserve]
        [DataMember(Name = "organizationId", IsRequired = true, EmitDefaultValue = true)]
        public string OrganizationId{ get; }

        /// <summary>
        /// Parameter projectName of FileStorageSetupDetails
        /// </summary>
        [Preserve]
        [DataMember(Name = "projectName", IsRequired = true, EmitDefaultValue = true)]
        public string ProjectName{ get; }

        /// <summary>
        /// Formats a FileStorageSetupDetails into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (OrganizationId != null)
            {
                serializedModel += "organizationId," + OrganizationId + ",";
            }
            if (ProjectName != null)
            {
                serializedModel += "projectName," + ProjectName;
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a FileStorageSetupDetails as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (OrganizationId != null)
            {
                var organizationIdStringValue = OrganizationId.ToString();
                dictionary.Add("organizationId", organizationIdStringValue);
            }

            if (ProjectName != null)
            {
                var projectNameStringValue = ProjectName.ToString();
                dictionary.Add("projectName", projectNameStringValue);
            }

            return dictionary;
        }
    }
}
