//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.CloudSave.Internal.Http;



namespace Unity.Services.CloudSave.Internal.Models
{
    /// <summary>
    /// An object containing a signed URL for a resource and the necessary information needed to access it.
    /// </summary>
    [Preserve]
    [DataContract(Name = "signed-url-response")]
    internal class SignedUrlResponse
    {
        /// <summary>
        /// An object containing a signed URL for a resource and the necessary information needed to access it.
        /// </summary>
        /// <param name="signedUrl">The signed URL used to access the resource.</param>
        /// <param name="httpMethod">The HTTP method that must be used on the signedUrl.</param>
        /// <param name="requiredHeaders">The set of HTTP headers that must be sent with the  request for it to succeed.</param>
        [Preserve]
        public SignedUrlResponse(string signedUrl = default, string httpMethod = default, Dictionary<string, string> requiredHeaders = default)
        {
            SignedUrl = signedUrl;
            HttpMethod = httpMethod;
            RequiredHeaders = requiredHeaders;
        }

        /// <summary>
        /// The signed URL used to access the resource.
        /// </summary>
        [Preserve]
        [DataMember(Name = "signedUrl", EmitDefaultValue = false)]
        public string SignedUrl{ get; }

        /// <summary>
        /// The HTTP method that must be used on the signedUrl.
        /// </summary>
        [Preserve]
        [DataMember(Name = "httpMethod", EmitDefaultValue = false)]
        public string HttpMethod{ get; }

        /// <summary>
        /// The set of HTTP headers that must be sent with the  request for it to succeed.
        /// </summary>
        [Preserve]
        [DataMember(Name = "requiredHeaders", EmitDefaultValue = false)]
        public Dictionary<string, string> RequiredHeaders{ get; }

        /// <summary>
        /// Formats a SignedUrlResponse into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (SignedUrl != null)
            {
                serializedModel += "signedUrl," + SignedUrl + ",";
            }
            if (HttpMethod != null)
            {
                serializedModel += "httpMethod," + HttpMethod + ",";
            }
            if (RequiredHeaders != null)
            {
                serializedModel += "requiredHeaders," + RequiredHeaders.ToString();
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a SignedUrlResponse as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (SignedUrl != null)
            {
                var signedUrlStringValue = SignedUrl.ToString();
                dictionary.Add("signedUrl", signedUrlStringValue);
            }

            if (HttpMethod != null)
            {
                var httpMethodStringValue = HttpMethod.ToString();
                dictionary.Add("httpMethod", httpMethodStringValue);
            }

            return dictionary;
        }
    }
}
