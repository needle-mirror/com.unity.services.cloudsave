{
  "name": "com.unity.services.cloudsave",
  "displayName": "Cloud Save",
  "version": "3.1.0",
  "unity": "2020.3",
  "description": "Build better player experiences with seamless game data stored securely in the cloud.\n\nUse Cloud Save to store your players’ progress and preferences, by doing so you can share this data between all the players’ devices and any game backend services.",
  "dependencies": {
    "com.unity.services.authentication": "2.6.1",
    "com.unity.services.core": "1.4.3"
  },
  "samples": [
    {
      "displayName": "Cloud Save Sample Script",
      "description": "Example script demonstrating the Cloud Save package.",
      "path": "Samples~/Basic Example"
    }
  ],
  "_upm": {
    "gameService": {
      "genericDashboardUrl": "https://dashboard.unity3d.com/gaming/cloud-save",
      "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/cloud-save/about",
      "projectDashboardUrlType": "OrganizationKeyAndProjectGuid",
      "groupId": "game-backend"
    },
    "supportedPlatforms": [
      "Android",
      "iOS",
      "Linux",
      "Mac",
      "PC",
      "Windows 8 Universal",
      "Windows 10 Universal"
    ],
    "changelog": "### Changed\n* The existing `CloudSaveService.Instance.Data.Player.DeleteAsync` has been marked as Obsolete, with a new version added that accepts options of type `CloudSave.Models.Data.Player.DeleteOptions` instead of `CloudSave.DeleteOptions`.\n  This enables the addition of new options to support Access Classes (see below in **Added**).\n\n### Added\n* Support for Access Classes when interacting with Player Data, via the addition of optional `options` objects to existing methods in the `CloudSaveService.Instance.Data.Player` API.\nFor more information on Access Classes, please refer to [the documentation](https://docs.unity.com/ugs/en-us/manual/cloud-save/manual/concepts/player-data#Access_Classes).\n  * Allows players to save data to the Public Access Class in addition to the existing Default, which allows saved data to be visible to other players.\n  * Allows players to read data from Public and Protected Access Classes in addition to the existing Default, where Protected Player Data can only be set by a server authoritative source (e.g. Cloud Code)\n  * Allows players to read other players' Public Player Data, by providing their Player ID as part of the new `options` object.\n\n* Support for Querying in both Public Player Data and Default Custom Data, via the new `QueryAsync` method.\nFor more information on Querying, please refer to [the documentation](https://docs.unity.com/ugs/en-us/manual/cloud-save/manual/concepts/queries).\n  * Any data for which an index is configured can be queried by specifying filters on the indexed data (e.g. clanMemberCount < 20)\n  * Any data stored for the returned entities (whether indexed or not) can be retrieved as part of the query response by specifying `ReturnKeys` in the `Query` object."
  },
  "relatedPackages": {
    "com.unity.services.cloudsave.tests": "3.1.0"
  },
  "upmCi": {
    "footprint": "f97823a8e4f54d0363d732abc15b3350f1ecb54d"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.services.cloudsave@3.1/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/operate-services-sdk.git",
    "type": "git",
    "revision": "91e650fb2ba6daef69eacf96657602ab1a61177b"
  }
}
